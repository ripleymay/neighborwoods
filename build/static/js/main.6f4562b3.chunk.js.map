{"version":3,"sources":["utilities/users-api.js","utilities/users-service.js","components/SignUpForm/SignUpForm.jsx","components/LoginForm/LoginForm.jsx","pages/AuthPage/AuthPage.jsx","components/NavBar/NavBar.jsx","pages/App/App.js","index.js"],"names":["BASE_URL","signUp","userData","sendRequest","login","credentials","url","a","method","payload","options","headers","body","JSON","stringify","token","getToken","Authorization","fetch","res","ok","json","Error","usersAPI","localStorage","setItem","getUser","getItem","parse","window","atob","split","exp","Date","now","removeItem","user","SignUpForm","state","name","email","password","confirm","error","handleSubmit","evt","preventDefault","formData","props","setUser","setState","handleChange","target","value","disable","this","className","autoComplete","onSubmit","type","onChange","required","disabled","Component","LoginForm","useState","setCredentials","setError","usersService","AuthPage","showSignUp","setShowSignUp","onClick","NavBar","to","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f4562b3.chunk.js","sourcesContent":["import { getToken } from './users-service';\n\nconst BASE_URL = '/api/users';\n\nexport function signUp(userData) {\n  return sendRequest(BASE_URL, 'POST', userData);\n}\n\nexport function login(credentials) {\n  return sendRequest(`${BASE_URL}/login`, 'POST', credentials);\n}\n\nexport function checkToken() {\n  return sendRequest(`${BASE_URL}/check-token`);\n}\n\n/*--- Helper Functions ---*/\n\nasync function sendRequest(url, method = 'GET', payload = null) {\n  // Fetch accepts an options object as the 2nd argument\n  // used to include a data payload, set headers, etc. \n  const options = { method };\n  if (payload) {\n    options.headers = { 'Content-Type': 'application/json' };\n    options.body = JSON.stringify(payload);\n  }\n  const token = getToken();\n  if (token) {\n    options.headers = options.headers || {};\n    options.headers.Authorization = `Bearer ${token}`;\n  }\n  const res = await fetch(url, options);\n  // res.ok will be false if the status code set to 4xx in the controller action\n  if (res.ok) return res.json();\n  throw new Error('Bad Request');\n}","import * as usersAPI from './users-api';\n\nexport async function signUp(userData) {\n  // Delegate the network request code to the users-api.js\n  // module which will ultimately return a JWT\n  const token = await usersAPI.signUp(userData);\n  localStorage.setItem('token', token);\n  return getUser();\n}\n\nexport async function login(credentials) {\n  const token = await usersAPI.login(credentials);\n  localStorage.setItem('token', token);\n  return getUser();\n}\n\nexport function getToken() {\n  // getItem method will return null if there's no key\n  const token = localStorage.getItem('token');\n  if (!token) return null;\n  const payload = JSON.parse(window.atob(token.split('.')[1]));\n  if (payload.exp < Date.now() / 1000) {\n    // Token has expired\n    localStorage.removeItem('token');\n    return null;\n  }\n  return token;\n}\n\nexport function getUser() {\n  const token = getToken();\n  return token ? JSON.parse(window.atob(token.split('.')[1])).user : null;\n}\n\nexport function logOut() {\n  localStorage.removeItem('token');\n}\n\n/*-- This is not necessary in your MERN-Stack projects ---*/\n/*-- It's only to see how to send a token to the server ---*/\nexport function checkToken() {\n  return usersAPI.checkToken()\n  .then(dateStr => new Date(dateStr));\n}","import React, { Component } from 'react';\nimport { signUp } from '../../utilities/users-service';\n\nexport default class SignUpForm extends Component {\n  // class field syntax\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    confirm: '',\n    error: ''\n  };\n\n  handleSubmit = async (evt) => {\n    evt.preventDefault();\n    try {\n      // We don't want to send the confirm or error properties\n      // Let's make a copy of this.state (we never want to directly modify the state obj)\n      const formData = {...this.state};\n      delete formData.error;\n      delete formData.confirm;\n      const user = await signUp(formData);\n      this.props.setUser(user);\n    } catch {\n      // An error occurred\n      this.setState({error: 'Sign Up Failed - Try Again'});\n    }\n  };\n\n  handleChange = (evt) => {\n    // Unlike setters in function components,\n    // this.setState MERGES the provided object, it does\n    // NOT replace it\n    this.setState({\n      [evt.target.name]: evt.target.value,\n      error: ''\n    });\n  };\n\n  // Must override the render method\n  // The render method take the place of a function component\n  // That is, it will ultimately return its UI as JSX\n  render() {\n    const disable = this.state.password !== this.state.confirm;\n    return (\n      <div>\n        <div className=\"form-container\">\n          <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\n            <label>Name</label>\n            <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} required />\n            <label>Email</label>\n            <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} required />\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required />\n            <label>Confirm</label>\n            <input type=\"password\" name=\"confirm\" value={this.state.confirm} onChange={this.handleChange} required />\n            <button type=\"submit\" disabled={disable}>SIGN UP</button>\n          </form>\n        </div>\n        <p className=\"error-message\">&nbsp;{this.state.error}</p>\n      </div>\n    );\n  }\n}","import { useState } from 'react';\nimport * as usersService from '../../utilities/users-service';\n\nexport default function LoginForm({ setUser }) {\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n\n  function handleChange(evt) {\n    setCredentials({ ...credentials, [evt.target.name]: evt.target.value });\n    setError('');\n  }\n\n  async function handleSubmit(evt) {\n    // Prevent form from being submitted to the server\n    evt.preventDefault();\n    try {\n      // The promise returned by the signUp service method \n      // will resolve to the user object included in the\n      // payload of the JSON Web Token (JWT)\n      const user = await usersService.login(credentials);\n      setUser(user);\n    } catch {\n      setError('Log In Failed - Try Again');\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"form-container\" onSubmit={handleSubmit}>\n        <form autoComplete=\"off\" >\n          <label>Email</label>\n          <input type=\"text\" name=\"email\" value={credentials.email} onChange={handleChange} required />\n          <label>Password</label>\n          <input type=\"password\" name=\"password\" value={credentials.password} onChange={handleChange} required />\n          <button type=\"submit\">LOG IN</button>\n        </form>\n      </div>\n      <p className=\"error-message\">&nbsp;{error}</p>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport SignUpForm from '../../components/SignUpForm/SignUpForm';\nimport LoginForm from '../../components/LoginForm/LoginForm';\n\nexport default function AuthPage({ setUser }) {\n  const [showSignUp, setShowSignUp] = useState(false);\n  return (\n    <main>\n      <h1>AuthPage</h1>\n      <button onClick={() => setShowSignUp(!showSignUp)}>{showSignUp ? 'Log In' : 'Sign Up'}</button>\n      { showSignUp ?\n        <SignUpForm setUser={setUser} />\n        :\n        <LoginForm setUser={setUser} />\n      }\n    </main>\n  );\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as usersService from '../../utilities/users-service';\n\nexport default function NavBar(props) {\n\n  function handleLogOut() {\n    usersService.logOut();\n    props.setUser(null);\n  }\n\n  return (\n    <nav>\n      <Link to=\"/orders\">Order History</Link>\n      &nbsp; | &nbsp;\n      <Link to=\"/orders/new\">New Order</Link>\n      &nbsp; | &nbsp;\n      <span>Welcome, {props.user.name}</span>\n      &nbsp; | &nbsp;\n      <Link to=\"\" onClick={handleLogOut}>Log Out</Link>\n    </nav>\n  );\n}","import React, { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport { getUser } from '../../utilities/users-service';\nimport AuthPage from '../AuthPage/AuthPage';\nimport NavBar from '../../components/NavBar/NavBar';\n\nexport default function App() {\n  const [user, setUser] = useState(getUser());\n  return (\n    <main className=\"App\">\n      { user ?\n        <>\n          <NavBar user={user} setUser={setUser} />\n          <Routes>\n            {/* client-side route that renders the component instance if the path matches the url in the address bar */}\n            {/* <Route path=\"\" element={< />} /> */}\n          </Routes>\n        </>\n        :\n        <AuthPage setUser={setUser} />\n      }\n    </main>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport { BrowserRouter as Router} from 'react-router-dom';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router><App /></Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}