{"version":3,"sources":["utilities/send-request.js","utilities/users-api.js","utilities/users-service.js","components/SignUpForm/SignUpForm.jsx","components/LoginForm/LoginForm.jsx","pages/AuthPage/AuthPage.jsx","utilities/orders-api.js","components/OrderCard/OrderCard.jsx","pages/OrderHistoryPage/OrderHistoryPage.jsx","utilities/trees-api.js","components/TreeCard/TreeCard.jsx","pages/AvailTreesPage/AvailTreesPage.jsx","components/OrderAddyForm/OrderAddyForm.jsx","pages/NewOrderPage/NewOrderPage.jsx","components/NavBar/NavBar.jsx","pages/App/App.js","index.js"],"names":["sendRequest","url","a","method","payload","options","headers","body","JSON","stringify","token","getToken","Authorization","fetch","res","ok","json","Error","BASE_URL","signUp","userData","login","credentials","usersAPI","localStorage","setItem","getUser","getItem","parse","window","atob","split","exp","Date","now","removeItem","user","SignUpForm","state","name","email","phone","password","confirm","error","handleSubmit","evt","preventDefault","formData","props","setUser","setState","handleChange","target","value","disable","this","className","autoComplete","onSubmit","type","onChange","required","disabled","Component","LoginForm","useState","setCredentials","setError","usersService","AuthPage","showSignUp","setShowSignUp","src","alt","onClick","getOrders","OrderCard","order","address","OrderHistoryPage","orders","setOrders","useEffect","ordersAPI","getPastOrders","length","map","o","getAvail","TreeCard","tree","stature","species","description","AvailTreesPage","trees","setTrees","treesAPI","getTrees","t","OrderAddyForm","street","zip","addyData","setAddyData","NewOrderPage","NavBar","to","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e057b56.chunk.js","sourcesContent":["import { getToken } from './users-service';\n\nexport default async function sendRequest(url, method = 'GET', payload = null) {\n  // Fetch takes an optional options object as the 2nd argument\n  // used to include a data payload, set headers, etc. \n  const options = { method };\n  if (payload) {\n    options.headers = { 'Content-Type': 'application/json' };\n    options.body = JSON.stringify(payload);\n  }\n  const token = getToken();\n  if (token) {\n    // Ensure headers object exists\n    options.headers = options.headers || {};\n    // Add token to an Authorization header\n    // Prefacing with 'Bearer' is recommended in the HTTP specification\n    options.headers.Authorization = `Bearer ${token}`;\n  }\n  const res = await fetch(url, options);\n  // res.ok will be false if the status code set to 4xx in the controller action\n  if (res.ok) return res.json();\n  throw new Error('Bad Request');\n}","import sendRequest from './send-request';\n\nconst BASE_URL = '/api/users';\n\nexport function signUp(userData) {\n  return sendRequest(BASE_URL, 'POST', userData);\n}\n\nexport function login(credentials) {\n  return sendRequest(`${BASE_URL}/login`, 'POST', credentials);\n}\n\nexport function checkToken() {\n  return sendRequest(`${BASE_URL}/check-token`);\n}","import * as usersAPI from './users-api';\n\nexport async function signUp(userData) {\n  // Delegate the network request code to the users-api.js\n  // module which will ultimately return a JWT\n  const token = await usersAPI.signUp(userData);\n  localStorage.setItem('token', token);\n  return getUser();\n}\n\nexport async function login(credentials) {\n  const token = await usersAPI.login(credentials);\n  localStorage.setItem('token', token);\n  return getUser();\n}\n\nexport function getToken() {\n  // getItem method will return null if there's no key\n  const token = localStorage.getItem('token');\n  if (!token) return null;\n  const payload = JSON.parse(window.atob(token.split('.')[1]));\n  if (payload.exp < Date.now() / 1000) {\n    // Token has expired\n    localStorage.removeItem('token');\n    return null;\n  }\n  return token;\n}\n\nexport function getUser() {\n  const token = getToken();\n  return token ? JSON.parse(window.atob(token.split('.')[1])).user : null;\n}\n\nexport function logOut() {\n  localStorage.removeItem('token');\n}\n\n/*-- This is not necessary in your MERN-Stack projects ---*/\n/*-- It's only to see how to send a token to the server ---*/\nexport function checkToken() {\n  return usersAPI.checkToken()\n  .then(dateStr => new Date(dateStr));\n}","import React, { Component } from 'react';\nimport { signUp } from '../../utilities/users-service';\n\nexport default class SignUpForm extends Component {\n  // class field syntax\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    password: '',\n    confirm: '',\n    error: ''\n  };\n\n  handleSubmit = async (evt) => {\n    evt.preventDefault();\n    try {\n      // We don't want to send the confirm or error properties\n      // Let's make a copy of this.state (we never want to directly modify the state obj)\n      const formData = {...this.state};\n      delete formData.error;\n      delete formData.confirm;\n      const user = await signUp(formData);\n      this.props.setUser(user);\n    } catch {\n      // An error occurred\n      this.setState({error: 'Sign Up Failed - Try Again'});\n    }\n  };\n\n  handleChange = (evt) => {\n    // Unlike setters in function components,\n    // this.setState MERGES the provided object, it does\n    // NOT replace it\n    this.setState({\n      [evt.target.name]: evt.target.value,\n      error: ''\n    });\n  };\n\n  // Must override the render method\n  // The render method take the place of a function component\n  // That is, it will ultimately return its UI as JSX\n  render() {\n    const disable = this.state.password !== this.state.confirm;\n    return (\n      <div>\n        <div className=\"form-container\">\n          <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\n            <label>Name</label>\n            <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} required />\n            <label>Email</label>\n            <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} required />\n            <label>Phone</label>\n            <input type=\"phone\" name=\"phone\" value={this.state.phone} onChange={this.handleChange} required />\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required />\n            <label>Confirm</label>\n            <input type=\"password\" name=\"confirm\" value={this.state.confirm} onChange={this.handleChange} required />\n            <button type=\"submit\" disabled={disable}>SIGN UP</button>\n          </form>\n        </div>\n        <p className=\"error-message\">&nbsp;{this.state.error}</p>\n      </div>\n    );\n  }\n}","import { useState } from 'react';\nimport * as usersService from '../../utilities/users-service';\n\nexport default function LoginForm({ setUser }) {\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n\n  function handleChange(evt) {\n    setCredentials({ ...credentials, [evt.target.name]: evt.target.value });\n    setError('');\n  }\n\n  async function handleSubmit(evt) {\n    // Prevent form from being submitted to the server\n    evt.preventDefault();\n    try {\n      // The promise returned by the signUp service method \n      // will resolve to the user object included in the\n      // payload of the JSON Web Token (JWT)\n      const user = await usersService.login(credentials);\n      setUser(user);\n    } catch {\n      setError('Log In Failed - Try Again');\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"form-container\" onSubmit={handleSubmit}>\n        <form autoComplete=\"off\" >\n          <label>Email</label>\n          <input type=\"text\" name=\"email\" value={credentials.email} onChange={handleChange} required />\n          <label>Password</label>\n          <input type=\"password\" name=\"password\" value={credentials.password} onChange={handleChange} required />\n          <button type=\"submit\">LOG IN</button>\n        </form>\n      </div>\n      <p className=\"error-message\">&nbsp;{error}</p>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport './AuthPage.css';\nimport SignUpForm from '../../components/SignUpForm/SignUpForm';\nimport LoginForm from '../../components/LoginForm/LoginForm';\n\nexport default function AuthPage({ setUser }) {\n  const [showSignUp, setShowSignUp] = useState(false);\n  return (\n    <main className=\"AuthPage\">\n      <div className=\"auth-content\">\n        <img src=\"images/nw-logo.jpeg\" alt=\"NW Logo\"/>\n        <h4>Get a tree!</h4>\n        <div className=\"auth-forms\">\n          <div className=\"auth-toggle\">\n            <p>{showSignUp ? 'Already a user?' : 'Need to create an account?'}</p>\n            <button onClick={() => setShowSignUp(!showSignUp)}>{showSignUp ? 'Log In' : 'Sign Up'}</button>\n          </div>\n          { showSignUp ?\n            <SignUpForm setUser={setUser} />\n            :\n            <LoginForm setUser={setUser} />\n          }\n        </div>\n      </div>\n      <div className=\"tree-liner\"></div>\n    </main>\n  );\n}","import sendRequest from './send-request';\n\nconst BASE_URL = '/api/orders';\n\nexport function getOrders() {\n  return sendRequest(`${BASE_URL}/`);\n}","export default function OrderCard({order}) {\n\n    return (\n      <div className=\"OrderCard\">\n          <p>{order.address}</p>\n      </div>\n    );\n  }","import React, { useState, useEffect } from 'react';\nimport * as ordersAPI from '../../utilities/orders-api';\nimport './OrderHistoryPage.css';\nimport OrderCard from '../../components/OrderCard/OrderCard';\n\n\nexport default function OrderHistoryPage({ user }) {\n\n    const [orders, setOrders] = useState([]);\n\n    useEffect(function() {\n        async function getPastOrders() {\n          const orders = await ordersAPI.getOrders();\n          setOrders(orders);\n        }\n        getPastOrders();\n      }, []);\n\n    return (\n        <main className=\"OrderHistoryPage\">\n            {orders.length ? \n                <div>\n                    <h1>Your tree orders</h1>\n                    <div>\n                        {orders.map(o => <OrderCard order={o}/>)}\n                    </div>\n                </div>\n                : \n                <h1>No orders yet</h1>\n            }\n        </main>\n    );\n}","import sendRequest from './send-request';\n\nconst BASE_URL = '/api/trees';\n\nexport function getAvail() {\n  return sendRequest(`${BASE_URL}/available`);\n}","import './TreeCard.css';\n\nexport default function TreeCard({tree}) {\n\n    return (\n      <div className=\"TreeCard\">\n          <h4>{tree.name} ({tree.stature})</h4>\n          <p><span className=\"italic\">{tree.species}</span></p>\n          <p>{tree.description}</p>\n      </div>\n    );\n  }","import React, { useState, useEffect } from 'react';\nimport * as treesAPI from '../../utilities/trees-api';\nimport './AvailTreesPage.css';\nimport TreeCard from '../../components/TreeCard/TreeCard';\n\n\nexport default function AvailTreesPage() {\n\n    const [trees, setTrees] = useState([]);\n\n    useEffect(function() {\n        async function getTrees() {\n          const trees = await treesAPI.getAvail();\n          setTrees(trees);\n        }\n        getTrees();\n      }, []);\n\n    return (\n        <main className=\"AvailTreesPage\">\n            <div>\n                <h1>Available trees</h1>\n                <div>\n                    {trees.map(t => <TreeCard tree={t} />)}\n                </div>\n            </div>\n        </main>\n    );\n}","import { useState } from 'react';\n\nexport default function OrderAddyForm() {\n  const [addyData, setAddyData] = useState({\n    street: '',\n    zip: ''\n  });\n  const [error, setError] = useState('');\n\n  function handleChange(evt) {\n    setAddyData({ ...addyData, [evt.target.name]: evt.target.value });\n    setError('');\n  }\n\n  async function handleSubmit(evt) {\n    // Prevent form from being submitted to the server\n    evt.preventDefault();\n    try {\n      // The promise returned by the signUp service method \n      // will resolve to the user object included in the\n      // payload of the JSON Web Token (JWT)\n    //   const user = await usersService.login(credentials);\n    //   setUser(user);\n    } catch {\n      setError('Log In Failed - Try Again');\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"form-container\" onSubmit={handleSubmit}>\n        <form autoComplete=\"off\" >\n          <label>Street address</label>\n          <input name=\"address\" value={addyData.address} onChange={handleChange} required />\n          <label>Zip Code</label>\n          <input name=\"zip\" value={addyData.zip} onChange={handleChange} required />\n          <button type=\"submit\">Validate Address</button>\n        </form>\n      </div>\n      <p className=\"error-message\">&nbsp;{error}</p>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport OrderAddyForm from '../../components/OrderAddyForm/OrderAddyForm';\nimport * as ordersAPI from '../../utilities/orders-api';\nimport './NewOrderPage.css';\n\nexport default function NewOrderPage({ user }) {\n\n    const [address, setAddress] = useState('');\n    const [isAddyValid, setIsAddyValid] = useState(false);\n\n    return (\n        <main className=\"NewOrderPage\">\n            < OrderAddyForm />\n        </main>\n    );\n}\n\n","import React from 'react';\nimport './NavBar.css';\nimport { Link } from 'react-router-dom';\nimport * as usersService from '../../utilities/users-service';\n\nexport default function NavBar(props) {\n\n  function handleLogOut() {\n    usersService.logOut();\n    props.setUser(null);\n  }\n\n  return (\n    <aside className=\"side-nav\">\n      <h3>Welcome, {props.user.name}</h3>\n      <Link to=\"orders\">All Orders</Link>\n      <Link to=\"orders/new\">New Order</Link>\n      <Link to=\"trees/available\">See Available Trees</Link>\n      <Link to=\"\">Settings</Link>\n      <Link to=\"\" onClick={handleLogOut}>Log Out</Link>\n    </aside>\n  );\n}","import React, { useState } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport './App.css';\nimport { getUser } from '../../utilities/users-service';\nimport AuthPage from '../AuthPage/AuthPage';\nimport OrderHistoryPage from '../OrderHistoryPage/OrderHistoryPage';\nimport AvailTreesPage from '../AvailTreesPage/AvailTreesPage';\nimport NewOrderPage from '../NewOrderPage/NewOrderPage';\nimport NavBar from '../../components/NavBar/NavBar';\n\nexport default function App() {\n  const [user, setUser] = useState(getUser());\n  return (\n    <main className=\"App\">\n      { user ?\n        <div className=\"main-content\">\n          <NavBar user={user} setUser={setUser} />\n          <Routes>\n            {/* client-side route that renders the component instance if the path matches the url in the address bar */}\n            <Route path=\"/orders\" element={< OrderHistoryPage user={user}/>} />\n            <Route path=\"/orders/new\" element={< NewOrderPage user={user}/>} />\n            <Route path=\"/trees/available\" element={< AvailTreesPage />} />\n            <Route path=\"/*\" element={<Navigate to=\"/orders\" />} />\n          </Routes>\n        </div>\n        :\n        <AuthPage setUser={setUser} />\n      }\n    </main>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport { BrowserRouter as Router} from 'react-router-dom';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router><App /></Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}